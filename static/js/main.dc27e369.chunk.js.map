{"version":3,"sources":["app/types.ts","app/components/Header/Header.module.css","app/contexts/UserContext.ts","app/components/Layout/Layout.module.css","app/components/ThemeSelector/ThemeSelector.module.css","app/helpers/fetcher.ts","client.ts","app/components/Content/Content.module.css","app/contexts/ThemeContext.ts","app/providers/Theme.tsx","app/helpers/setTheme.ts","app/stores/UserStore/services.ts","app/stores/UserStore/index.ts","app/stores/UserStore/UserStore.ts","app/providers/CurrentUser.tsx","app/components/Content/index.ts","app/components/Content/Content.tsx","app/components/CurrentUser/index.ts","app/components/CurrentUser/CurrentUser.tsx","app/components/ThemeSelector/ThemeSelector.tsx","app/components/ThemeSelector/index.ts","app/components/Header/index.ts","app/components/Header/Header.tsx","app/components/Layout/index.ts","app/components/Layout/Layout.tsx","posts/routes/Posts/index.tsx","index.tsx"],"names":["uiThemeName","uiLoading","__webpack_require__","d","__webpack_exports__","module","exports","root","content","title","side","user","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","React","createContext","header","main","button","_callee","store","name","service","data","_Users_sancho_Work_test_react_hooks_mobx_demo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","Fetch","sent","runInAction","Done","abrupt","Promise","resolve","t0","Error","reject","stop","fetcher","get","_ref","Object","_Users_sancho_Work_test_react_hooks_mobx_demo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","url","fetch","then","resp","json","_x","apply","this","arguments","Light","DEFAULT_THEME","matchMedia","matches","Dark","Theme","observer","children","_useState","useState","_useState2","slicedToArray","theme","updateTheme","onUpdateTheme","useCallback","useLayoutEffect","document","documentElement","setAttribute","setTheme","react_default","createElement","ThemeContext","Provider","value","services","client","userStore","_this","observable","None","action","UserStoreContext","CurrentUser","useContext","useEffect","UserContext","Content","memo","className","classNames","styles","THEMES","keys","ThemeSelector","onChange","map","key","onClick","Header","_useContext","components_Content","components_CurrentUser","components_ThemeSelector","Layout","components_Header","Loadable","loader","e","bind","loading","ReactDOM","render","providers_Theme","providers_CurrentUser","components_Layout","Posts","getElementById"],"mappings":"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","file":"static/js/main.dc27e369.chunk.js","sourcesContent":["export enum uiThemeName {\n  Light = 'light',\n  Dark = 'dark',\n}\n\nexport enum uiLoading {\n  None,\n  Fetch,\n  Done,\n  Error,\n}\n\nexport interface IUser {\n  id: number;\n  name: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2nBTP\",\"content\":\"Header_content__3nBtP\",\"title\":\"Header_title__W8kkr\",\"side\":\"Header_side__2HLyl\",\"user\":\"Header_user__2drLH\"};","import React from 'react';\nimport { IUser } from '../types';\n\nexport default React.createContext<IUser | null>(null);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__3Jpa7\",\"header\":\"Layout_header__3qpxs\",\"main\":\"Layout_main__3R21F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ThemeSelector_root__3Ke2n\",\"button\":\"ThemeSelector_button__1CTn9\"};","import { runInAction } from 'mobx';\nimport { uiLoading } from '../types';\n\nasync function fetcher<S extends any, T>(store: S, name: string, service: Promise<T>): Promise<T> {\n  try {\n    store[name] = uiLoading.Fetch;\n    const data = await service;\n\n    runInAction(() => {\n      store[name] = uiLoading.Done;\n    });\n\n    return Promise.resolve(data);\n  } catch (error) {\n    runInAction(() => {\n      store[name] = uiLoading.Error;\n    });\n\n    return Promise.reject(error);\n  }\n}\n\nexport default fetcher;\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nconst get = async(url: string) => (\n  fetch(API_URL + url).then(resp => resp.json())\n);\n\nexport default {\n  get,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Content_root__qJ71I\"};","import React from 'react';\nimport { uiThemeName } from '../types';\n\ntype IThemeContext = [uiThemeName, (theme: uiThemeName) => void];\nexport default React.createContext<IThemeContext>([uiThemeName.Light, () => {}]);\n","import React, { useState, useCallback, useLayoutEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport ThemeContext from '../contexts/ThemeContext';\nimport setTheme from '../helpers/setTheme';\nimport { uiThemeName } from '../types';\n\nconst DEFAULT_THEME =\n  matchMedia('(prefers-color-scheme: dark)').matches\n    ? uiThemeName.Dark\n    : uiThemeName.Light;\n\nconst Theme: React.FunctionComponent = observer(({ children }) => {\n  const [theme, updateTheme] = useState(DEFAULT_THEME);\n\n  const onUpdateTheme = useCallback((theme: uiThemeName) => {\n    updateTheme(theme);\n  }, []);\n\n  useLayoutEffect(() => {\n    setTheme(theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={[theme, onUpdateTheme]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n});\n\nexport default Theme;\n","import { uiThemeName } from '../types';\n\nexport default (theme: uiThemeName) => (\n  document.documentElement.setAttribute('theme', theme)\n);\n","import client from '../../../client';\nimport { IUser } from '../../types';\n\nconst fetchUser = (): Promise<IUser> => client.get('/users/2');\n\nexport default { fetchUser };\n","import UserStore from './UserStore';\nimport { createContext } from 'react';\n\nconst userStore = new UserStore();\nexport const UserStoreContext = createContext(userStore);\n\nexport default userStore;\n","import { observable, action, runInAction } from 'mobx';\nimport fetcher from '../../helpers/fetcher';\nimport services from './services';\nimport { uiLoading, IUser } from '../../types';\n\nclass UserStore {\n\n  @observable fetching: uiLoading = uiLoading.None;\n  @observable user: IUser | null = null;\n\n  @action fetch() {\n    return fetcher(this, 'fetching', services.fetchUser())\n      .then((user) => {\n        runInAction(() => this.user = user);\n      });\n  }\n\n}\n\nexport default UserStore;\n","import React, { useContext, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { UserStoreContext } from '../stores/UserStore';\nimport UserContext from '../contexts/UserContext';\n\nconst CurrentUser: React.FunctionComponent = observer(({ children }) => {\n  const userStore = useContext(UserStoreContext);\n  useEffect(() => { userStore.fetch(); }, []);\n\n  return (\n    <UserContext.Provider value={userStore.user}>\n      {children}\n    </UserContext.Provider>\n  );\n});\n\nexport default CurrentUser;\n","import Content from './Content';\n\nexport default Content;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './Content.module.css';\n\ninterface Props {\n  className?: string;\n}\n\nconst Content: React.FunctionComponent<Props> = React.memo(\n  ({ className, children }) => (\n    <div className={classNames(styles.root, className)}>\n      {children}\n    </div>\n  )\n);\n\nexport default Content;\n","import CurrentUser from './CurrentUser';\n\nexport default CurrentUser;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport { IUser } from '../../types';\n\ninterface Props {\n  user: IUser | null;\n  className?: string;\n}\n\nconst CurrentUser: React.FunctionComponent<Props> = observer(({ user, className }) => {\n  if (!user) return null;\n  return <div className={classNames(className)}>{user.name}</div>;\n});\n\nexport default CurrentUser;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { uiThemeName } from '../../types';\nimport styles from './ThemeSelector.module.css';\n\nconst THEMES = Object.keys(uiThemeName);\n\ninterface IProps {\n  className?: string;\n  onChange: (theme: uiThemeName) => void;\n}\n\nconst ThemeSelector: React.FunctionComponent<IProps> = React.memo(\n  ({ className, onChange }) => (\n    <div className={classNames(styles.root, className)}>\n      {THEMES.map((name: any) => (\n        <button\n          key={name}\n          className={styles.button}\n          onClick={() => onChange(uiThemeName[name] as uiThemeName)}\n        >\n          {name}\n        </button>\n      ))}\n    </div>\n  )\n);\n\nexport default ThemeSelector;\n","import ThemeSelector from './ThemeSelector';\n\nexport default ThemeSelector;\n","import Header from './Header';\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport Content from '../Content';\nimport CurrentUser from '../CurrentUser';\nimport ThemeSelector from '../ThemeSelector';\nimport UserContext from '../../contexts/UserContext';\nimport ThemeContext from '../../contexts/ThemeContext';\nimport styles from './Header.module.css';\n\ninterface Props {\n  className?: string;\n}\n\nconst Header: React.FunctionComponent<Props> = observer(({ className }) => {\n  const user = useContext(UserContext);\n  const [, onUpdateTheme] = useContext(ThemeContext);\n\n  return (\n    <header className={classNames(styles.root, className)}>\n      <Content className={styles.content}>\n        <div className={styles.title}>Demo</div>\n        <div className={styles.side}>\n          <CurrentUser className={styles.user} user={user} />\n          <ThemeSelector onChange={onUpdateTheme} />\n        </div>\n      </Content>\n    </header>\n  );\n});\n\nexport default Header;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Header from '../Header';\nimport Content from '../Content';\nimport styles from './Layout.module.css';\n\nconst Layout: React.FunctionComponent = observer(({ children }) => {\n  return (\n    <div className={styles.root}>\n      <Header className={styles.header} />\n      <main className={styles.main}>\n        <Content>\n          {children}\n        </Content>\n      </main>\n    </div>\n  );\n});\n\nexport default Layout;\n","import React from 'react';\nimport Loadable from 'react-loadable';\n\nexport default Loadable({\n  loader: () => import(/* webpackChunkName: \"posts\" */ './Posts'),\n  loading: () => <div>Loading...</div>,\n});\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Theme from './app/providers/Theme';\nimport CurrentUser from './app/providers/CurrentUser';\nimport Layout from './app/components/Layout';\nimport Posts from './posts/routes/Posts';\n\nReactDOM.render(\n  <Theme>\n    <CurrentUser>\n      <Layout>\n        <Posts />\n      </Layout>\n    </CurrentUser>\n  </Theme>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}