{"version":3,"sources":["webpack:///./src/client.ts","webpack:///./src/app/components/Layout/Layout.css","webpack:///./src/app/stores/StatusStore/StatusStore.ts","webpack:///./src/app/stores/StatusStore/index.ts","webpack:///./src/app/components/Content/Content.css","webpack:///./src/app/stores/UserStore/services.ts","webpack:///./src/app/stores/UserStore/UserStore.ts","webpack:///./src/app/stores/UserStore/index.ts","webpack:///./src/app/hooks/useUser.ts","webpack:///./src/app/components/Header/Header.css","webpack:///./src/app/contexts/ThemeContext.ts","webpack:///./src/app/helpers/setTheme.ts","webpack:///./src/app/providers/Theme.tsx","webpack:///./src/app/components/Content/index.ts","webpack:///./src/app/components/Content/Content.tsx","webpack:///./src/app/components/CurrentUser/index.ts","webpack:///./src/app/components/CurrentUser/CurrentUser.tsx","webpack:///./src/app/components/ThemeSelector/ThemeSelector.tsx","webpack:///./src/app/components/ThemeSelector/index.ts","webpack:///./src/app/components/Header/index.ts","webpack:///./src/app/components/Header/Header.tsx","webpack:///./src/app/components/Layout/index.ts","webpack:///./src/app/components/Layout/Layout.tsx","webpack:///./src/posts/routes/Posts/index.ts","webpack:///./src/index.tsx","webpack:///./src/app/types.ts","webpack:///./src/app/components/ThemeSelector/ThemeSelector.css"],"names":["API_URL","get","url","fetch","then","resp","json","module","exports","fsState","StatusStore","service","this","state","Idle","Pending","Fulfilled","Rejected","args","error","Promise","reject","fetchUser","data","client","status","user","callback","catch","console","log","services","createContext","Light","theme","document","documentElement","setAttribute","DEFAULT_THEME","matchMedia","matches","Dark","children","updateTheme","onUpdateTheme","ThemeContext","Provider","value","memo","className","root","name","THEMES","Object","keys","onChange","map","key","button","onClick","useUser","content","title","side","header","main","lazy","render","fallback","Posts","getElementById","uiThemeName","IUser","id"],"mappings":"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","file":"static/js/main.f55557ed.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nfunction get<T = any>(url: string): Promise<T> {\n  return fetch(API_URL + url).then(resp => resp.json());\n}\n\nexport default {\n  get,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2SV9nqCN\",\"header\":\"KiG5F72V\",\"main\":\"_1evcUDq8\"};","import { observable, action, computed } from 'mobx';\n\nenum fsState {\n  Idle,\n  Pending,\n  Fulfilled,\n  Rejected,\n}\n\nclass StatusStore<R, A extends any[] = []> {\n\n  private readonly service: (...args: A) => Promise<R>;\n  @observable private state: fsState;\n\n  constructor(service: (...args: A) => Promise<R>) {\n    this.service = service;\n    this.state = fsState.Idle;\n  }\n\n  @computed get loading(): boolean {\n    return this.state === fsState.Pending;\n  }\n\n  @computed get success(): boolean {\n    return this.state === fsState.Fulfilled;\n  }\n\n  @computed get failure(): boolean {\n    return this.state === fsState.Rejected;\n  }\n\n  @action async fetch(...args: A): Promise<[R, () => void]> {\n    try {\n      this.state = fsState.Pending;\n      const data = await this.service(...args);\n      return [data, () => this.state = fsState.Fulfilled];\n    } catch (error) {\n      this.state = fsState.Rejected;\n      return Promise.reject(error);\n    }\n  }\n\n}\n\nexport default StatusStore;\n","import StatusStore from './StatusStore';\n\nexport default StatusStore;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3N4K6CC9\"};","import * as tPromise from 'io-ts-promise';\nimport client from 'client';\nimport { IUser } from 'app/types';\n\nasync function fetchUser() {\n  const data = await client.get('/users/2');\n  return tPromise.decode(IUser, data);\n}\n\nexport default { fetchUser };\n","import { action, observable, onBecomeObserved, runInAction } from 'mobx';\nimport { IUser } from 'app/types';\nimport StatusStore from '../StatusStore';\nimport services from './services';\n\nclass UserStore {\n\n  status: StatusStore<IUser>;\n  @observable user: IUser | null;\n\n  constructor() {\n    this.status = new StatusStore(services.fetchUser);\n    this.user = null;\n    onBecomeObserved(this, 'user', () => this.fetch());\n  }\n\n  @action fetch = () => (\n    this.status.fetch()\n      .then(([user, callback]) => runInAction(() => {\n        this.user = user;\n        callback();\n      }))\n      .catch((error) => {\n        console.log(error);\n      })\n  );\n\n}\n\nexport default UserStore;\n","import UserStore from './UserStore';\n\nexport default new UserStore();\n","import store from 'app/stores/UserStore';\n\nexport default () => {\n  return store;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3iUT9uhC\",\"content\":\"kKyHcxd0\",\"title\":\"UiCsmKit\",\"side\":\"_1PRdoG1h\",\"user\":\"_3qb8q7Im\"};","import React from 'react';\nimport { uiThemeName } from 'app/types';\n\ntype IThemeContext = [uiThemeName, (theme: uiThemeName) => void];\nexport default React.createContext<IThemeContext>([uiThemeName.Light, () => {}]);\n","import { uiThemeName } from 'app/types';\n\nfunction setTheme(theme: uiThemeName) {\n  document.documentElement.setAttribute('theme', theme);\n}\n\nexport default setTheme;\n","import React, { useState, useCallback, useLayoutEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport ThemeContext from 'app/contexts/ThemeContext';\nimport setTheme from 'app/helpers/setTheme';\nimport { uiThemeName } from 'app/types';\n\nconst DEFAULT_THEME =\n  matchMedia('(prefers-color-scheme: dark)').matches\n    ? uiThemeName.Dark\n    : uiThemeName.Light;\n\nexport default observer(function Theme({ children }) {\n  const [theme, updateTheme] = useState(DEFAULT_THEME);\n\n  const onUpdateTheme = useCallback((theme: uiThemeName) => {\n    updateTheme(theme);\n  }, []);\n\n  useLayoutEffect(() => {\n    setTheme(theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={[theme, onUpdateTheme]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n});\n","import Content from './Content';\n\nexport default Content;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport css from './Content.css';\n\ninterface IProps {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport default React.memo<IProps>(\n  function Content({ className, children }) {\n    return (\n      <div className={classNames(css.root, className)}>\n        {children}\n      </div>\n    );\n  }\n);\n","import CurrentUser from './CurrentUser';\n\nexport default CurrentUser;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport { IUser } from 'app/types';\n\ninterface IProps {\n  user: IUser | null;\n  className?: string;\n}\n\nexport default observer<IProps>(\n  function CurrentUser({ user, className }) {\n    if (!user) return null;\n    return <div className={classNames(className)}>{user.name}</div>;\n  }\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { uiThemeName } from 'app/types';\n\nimport css from './ThemeSelector.css';\n\nconst THEMES = Object.keys(uiThemeName) as ReadonlyArray<keyof typeof uiThemeName>;\n\ninterface IProps {\n  className?: string;\n  onChange: (theme: uiThemeName) => void;\n}\n\nexport default React.memo<IProps>(\n  function ThemeSelector({ className, onChange }) {\n    return (\n      <div className={classNames(css.root, className)}>\n        {THEMES.map((name) => (\n          <button\n            key={name}\n            className={css.button}\n            onClick={() => onChange(uiThemeName[name] as uiThemeName)}\n          >\n            {name}\n          </button>\n        ))}\n      </div>\n    );\n  }\n);\n","import ThemeSelector from './ThemeSelector';\n\nexport default ThemeSelector;\n","import Header from './Header';\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport ThemeContext from 'app/contexts/ThemeContext';\nimport useUser from 'app/hooks/useUser';\nimport Content from '../Content';\nimport CurrentUser from '../CurrentUser';\nimport ThemeSelector from '../ThemeSelector';\n\nimport css from './Header.css';\n\ninterface IProps {\n  className?: string;\n}\n\nexport default observer<IProps>(\n  function Header({ className }) {\n    const { user } = useUser();\n    const [, onUpdateTheme] = useContext(ThemeContext);\n\n    return (\n      <header className={classNames(css.root, className)}>\n        <Content className={css.content}>\n          <div className={css.title}>Demo</div>\n          <div className={css.side}>\n            <CurrentUser className={css.user} user={user} />\n            <ThemeSelector onChange={onUpdateTheme} />\n          </div>\n        </Content>\n      </header>\n    );\n  }\n);\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Header from '../Header';\nimport Content from '../Content';\n\nimport css from './Layout.css';\n\nexport default observer(\n  function Layout({ children }) {\n    return (\n      <div className={css.root}>\n        <Header className={css.header} />\n        <main className={css.main}>\n          <Content>\n            {children}\n          </Content>\n        </main>\n      </div>\n    );\n  }\n);\n","import React from 'react';\n\nexport default React.lazy(() => import('./Posts'));\n","import './index.css';\n\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport Theme from 'app/providers/Theme';\nimport Layout from 'app/components/Layout';\nimport Posts from 'posts/routes/Posts';\n\nReactDOM.render(\n  <Theme>\n    <Layout>\n      <Suspense fallback={null}>\n        <Posts />\n      </Suspense>\n    </Layout>\n  </Theme>,\n  document.getElementById('root'),\n);\n","import * as t from 'io-ts';\n\nexport enum uiThemeName {\n  Light = 'light',\n  Dark = 'dark',\n}\n\nexport const IUser = t.readonly(\n  t.interface({\n    id: t.number,\n    name: t.string,\n  })\n);\n\nexport type IUser = t.TypeOf<typeof IUser>;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2oIKar5Z\",\"button\":\"_3L5XS3WE\"};"],"sourceRoot":""}