{"version":3,"sources":["posts/components/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","app/components/Title/index.ts","app/components/Title/Title.tsx","posts/components/Post/index.ts","posts/components/Post/Post.tsx","posts/components/PostsList/index.ts","posts/components/PostsList/PostsList.tsx","posts/types.ts","posts/stores/PostsStore/services.ts","posts/stores/PostsStore/index.ts","posts/stores/PostsStore/PostsStore.ts","posts/routes/Posts/Posts.tsx","posts/hooks/usePosts.ts","app/components/Title/Title.module.css","posts/components/PostsList/PostsList.module.css","posts/routes/Posts/Posts.module.css"],"names":["module","exports","root","title","body","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","Title","React","memo","_ref","children","react_default","a","createElement","className","styles","Post","observer","post","classNames","PostsList","posts","loading","map","components_Post","key","id","IPost","t","userId","services","fetchPosts","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","client","get","sent","abrupt","tPromise","stop","apply","this","arguments","stores_PostsStore","PostsStore","classCallCheck","status","initializerDefineProperty","_descriptor","_descriptor2","StatusStore","observable","action","_this","fetch","then","_ref2","slicedToArray","callback","runInAction","forEach","set","catch","error","console","log","filterPosts","user","onlyMy","filter","Posts","_useState","useState","_useState2","setOnlyMy","useUser","_usePosts","useEffect","store","onOnlyMyChange","useCallback","event","target","checked","header","components_Title","Boolean","type","onChange","components_PostsList","values"],"mappings":"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","file":"static/js/posts.d71495bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Post_root__1O5J7\",\"title\":\"Post_title__2qNB4\",\"body\":\"Post_body__4XA6I\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import Title from './Title';\n\nexport default Title;\n","import React from 'react';\nimport styles from './Title.module.css';\n\nconst Title: React.FunctionComponent = React.memo(\n  ({ children }) => (\n    <h1 className={styles.root}>{children}</h1>\n  )\n);\n\nexport default Title;\n","import Post from './Post';\n\nexport default Post;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport { IPost } from '../../types';\nimport styles from './Post.module.css';\n\ninterface IProps {\n  post: IPost;\n  className?: string;\n}\n\nconst Post: React.FunctionComponent<IProps> = observer(\n  ({ post, className }) => (\n    <div className={classNames(styles.root, className)}>\n      <h3 className={styles.title}>\n        {post.title}\n      </h3>\n      <p className={styles.body}>\n        {post.body}\n      </p>\n    </div>\n  )\n);\n\nexport default Post;\n","import PostsList from './PostsList';\n\nexport default PostsList;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport Post from '../Post';\nimport { IPost } from '../../types';\nimport styles from './PostsList.module.css';\n\ninterface IProps {\n  posts: IPost[];\n  loading: boolean;\n  className?: string;\n}\n\nconst PostsList: React.FunctionComponent<IProps> = observer(\n  ({ posts, loading, className }) => (\n    <div className={classNames(styles.root, className)}>\n      {posts.map(post => (\n        <Post\n          key={post.id}\n          post={post}\n          className={styles.post}\n        />\n      ))}\n      {loading && <div>Loading...</div>}\n    </div>\n  )\n);\n\nexport default PostsList;\n","import * as t from 'io-ts';\n\nexport const IPost = t.interface({\n  userId: t.number,\n  id: t.number,\n  title: t.string,\n  body: t.string,\n});\n\nexport type IPost = t.TypeOf<typeof IPost>;\n","import * as t from 'io-ts';\nimport * as tPromise from 'io-ts-promise';\nimport client from '../../../client';\nimport { IPost } from '../../types';\n\nconst fetchPosts = async () => {\n  const data = await client.get<IPost[]>('/posts');\n  return tPromise.decode(t.array(IPost), data);\n};\n\nexport default { fetchPosts };\n","import PostsStore from './PostsStore';\n\nexport default new PostsStore();\n","import { action, observable, ObservableMap, runInAction } from 'mobx';\nimport StatusStore from '../../../app/stores/StatusStore';\nimport services from './services';\nimport { IPost } from '../../types';\n\nclass PostsStore {\n\n  status: StatusStore<IPost[]>;\n  @observable posts: ObservableMap<number, IPost>;\n\n  constructor() {\n    this.status = new StatusStore(services.fetchPosts);\n    this.posts = observable.map({});\n  }\n\n  @action fetch = () => (\n    this.status.fetch()\n      .then(([posts, callback]) => runInAction(() => {\n        posts.forEach(post => this.posts.set(post.id, post));\n        callback();\n      }))\n      .catch((error) => {\n        console.log(error);\n      })\n  );\n\n}\n\nexport default PostsStore;\n","import React, { useState, useCallback } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Title from '../../../app/components/Title';\nimport PostsList from '../../components/PostsList';\nimport useUser from '../../../app/hooks/useUser';\nimport usePosts from '../../hooks/usePosts';\nimport { IUser } from '../../../app/types';\nimport { IPost } from '../../types';\nimport styles from './Posts.module.css';\n\nconst filterPosts = (posts: IPost[], user: IUser | null, onlyMy: boolean): IPost[] => {\n  return user && posts.length && onlyMy\n    ? posts.filter(post => post.userId === user.id)\n    : posts;\n};\n\nconst Posts: React.FunctionComponent = observer(() => {\n  const [onlyMy, setOnlyMy] = useState(false);\n\n  const { user } = useUser();\n  const { posts, status } = usePosts(true);\n\n  const onOnlyMyChange = useCallback((event) => setOnlyMy(event.target.checked), []);\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <Title>Posts</Title>\n        {Boolean(user) && (\n          <label>\n            <input type=\"checkbox\" checked={onlyMy} onChange={onOnlyMyChange} />\n            Only my posts\n          </label>\n        )}\n      </div>\n      <PostsList\n        loading={status.loading}\n        posts={filterPosts([...posts.values()], user, onlyMy)}\n      />\n    </div>\n  );\n});\n\nexport default Posts;\n","import store from '../stores/PostsStore';\nimport { useEffect } from 'react';\n\nexport default (fetch?: boolean) => {\n  useEffect(() => {\n    if (fetch) store.fetch().catch();\n  }, []);\n\n  return store;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Title_root__2BL1A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostsList_root__23Sv4\",\"post\":\"PostsList_post__sRbXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Posts_header__TkvBH\"};"],"sourceRoot":""}